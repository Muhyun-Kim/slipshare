// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int                   @id @default(autoincrement())
  userId               String                @unique
  username             String                @unique
  detail               String?
  blogs                Blog[]
  customRecipes        CustomRecipe[]
  comments             Comment[]
  customRecipeComments CustomRecipeComment[]
}

model Blog {
  id        Int       @id @default(autoincrement())
  authorId  String
  author    User      @relation(fields: [authorId], references: [userId])
  content   String    @db.VarChar(400)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  like      Int       @default(0)
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogId    Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  authorId  String
  author    User     @relation(fields: [authorId], references: [userId])
}

model CustomRecipe {
  id             Int                   @id @default(autoincrement())
  authorId       String
  author         User                  @relation(fields: [authorId], references: [userId])
  cocktailName   String
  cocktailImg    String?
  glass          String
  mainIngredient String
  method         Method
  ingredients    String[]
  measurements   String[]
  createdAt      DateTime              @default(now())
  updatedAt      DateTime              @updatedAt
  comments       CustomRecipeComment[]
}

model CustomRecipeComment {
  id             Int          @id @default(autoincrement())
  comment        String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  customRecipeId Int
  customRecipe   CustomRecipe @relation(fields: [customRecipeId], references: [id])
  authorId       String
  author         User         @relation(fields: [authorId], references: [userId])
}

enum Method {
  STIR
  SHAKE
  BUILD
  BLEND
  LAYER
}
